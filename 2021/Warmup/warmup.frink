// Solution for 2020 Day 1: Report Repair
// https://adventofcode.com/2020/day/1
// Written in Frink by Chris Hansen
// Website: https://circuitsandcode.wehappyfew.net/
// Twitter: https://twitter.com/CircuitsAndCode
// Github: https://github.com/circuitsandcode
// MIT License: https://github.com/circuitsandcode/AdventOfCode/blob/master/LICENSE

start = now[]

// Prepare Sample Input
sampleInput = [4118,2666,7528,3301,3856,2756,4864,3857,6329,8776]
sampleSolution = -21077

// Create a function to determine if value is even
isEven = { |x| x mod 2 == 0 }

// Create function for solving the puzzle.
oddevensum[input,sampleSolution = 0] :=
{
  // Declare variables for tracking totals
  evenSum = 0
  oddSum = 0
  
  for y = input
  {
    if y mod 2 == 0
    {
      evenSum = evenSum + y
    } else
    {
      oddSum = oddSum + y
    }
  }

  // Determine the result
  resultSum = oddSum - evenSum
  println["The result is " + toString[resultSum] + "."]

  // Testing sample solution
	 if sampleSolution != 0
  {
    if sampleSolution == resultSum
	   {
      println["The Sample Solution is correct!"]
	   } else
	   {
		    println["The Sample Solution is incorrect."]
	   }
	 }
	 println[""]
}

// Test the sample solution
oddevensum[sampleInput,sampleSolution]
